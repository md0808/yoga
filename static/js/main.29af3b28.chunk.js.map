{"version":3,"sources":["imgs/1.gif","components/Nav/index.js","pages/resources.js","pages/contact.js","pages/support.js","pages/home.js","components/GifOne/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Nav","classes","className","AppBar","position","color","Grid","container","justify","direction","xs","alignItems","item","md","to","Hidden","mdUp","sm","Button","href","resources","Typography","Contact","useState","showEmailSignup","setEmailSignup","email","setEmail","name","setName","Container","variant","onClick","FormControl","mt","TextField","fullWidth","helperText","e","target","value","console","log","window","open","support","home","GifOne","src","gif","alt","app","Fragment","path","component","exact","contact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.29af3b28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.3425a7ce.gif\";","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport \"./styles.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 3,\n    // marginRight: theme.spacing(2),\n  },\n}));\n\nconst Nav = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='fixed' color='transparent'>\n        <div className='mon-nav'>\n          <Grid\n            container\n            justify='space-between'\n            direction='row'\n            // spacing={2}\n            xs={12}\n            alignItems='center'\n          >\n            <Grid item xs={2} md={4}></Grid>\n            <Grid item xs={10} md={4} justify='center'>\n              <Link className='logo' to='/yoga/'>\n                <h2 className='logo'>Monica Dixon Yoga</h2>\n              </Link>\n            </Grid>\n            <Hidden mdUp>\n              <Grid item xs={2} sm={0}></Grid>\n            </Hidden>\n\n            <Grid item xs={8} md={3} justify='right'>\n              <Button href='/yoga/resources' color='inherit'>\n                Resources\n              </Button>\n              <Button href='/yoga/contact' color='inherit'>\n                Contact\n              </Button>\n              <Button href='/yoga/support' color='inherit'>\n                Support\n              </Button>\n            </Grid>\n          </Grid>\n        </div>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Nav;\n","// Angela Farmer\n// Sara Firman?\n// Eckhart Tolle\n// Sam Harris App\n//\n\n// My channel\n// Spotify\n\n// Immunity Rituals\nimport React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nconst resources = () => {\n  return (\n    <div className='content-text'>\n      <Typography>\n        <h2>Resources</h2>\n        <p>\n          Here are some resources that I've drawn inspiration from recently or\n          in the past.\n        </p>\n        <div>\n          <h3>Yoga</h3>\n          <p>\n            <a href='https://www.youtube.com/watch?v=soA-PHxcgbI&t=531s'>\n              Angela Fisher\n            </a>\n            <br />\n            Dynamic, internal approach to yoga\n          </p>\n          <p>\n            <a href='https://www.youtube.com/channel/UCVgIYq5liRSB46JDoFiwF2Q'>\n              My Youtube Channel\n            </a>\n            <br />\n            Mostly videos recorded from live zoom classes, with a few\n            prerecorded classes.\n          </p>\n        </div>\n        <div>\n          <h3>Meditation and Mindfulness</h3>\n          <p>\n            <a href='https://wakingup.com/'>Sam Harris's Waking Up App</a>\n            <br />\n            Structured course, and daily guided meditations, and thoughtful\n            talks on what it means to be mindful, and why its worth your time.\n          </p>\n        </div>\n        <div>\n          <h3>Personal, Relational, and Social Change</h3>\n          <p>\n            <a href='https://www.youtube.com/watch?v=66cYcSak6nE'>\n              Gabor Mate{\" \"}\n            </a>{\" \"}\n            <br />\n            Brief introduction to his work that examines the roots of addiction\n            and the effects of childhood trauma.\n          </p>\n          <p>\n            <a href='https://www.youtube.com/watch?v=NK8C_rCz1yw&list=LLSogJUQRsgHqhMkkhYLAJLw&index=2&t=0s'>\n              Charles Eisenstein{\" \"}\n            </a>{\" \"}\n            <br />\n            Writer and speaker who examines social and personal transitional\n            spaces\n          </p>\n          <p>\n            <a href='https://www.youtube.com/watch?v=bUzC9CrTpoo'>\n              Eckhart Tolle{\" \"}\n            </a>{\" \"}\n            <br />\n            Instant Calm\n          </p>\n          <p>\n            <a href='https://www.youtube.com/watch?v=ObtmLBOfIRM'>\n              Esther Perel\n            </a>\n            <br />\n            Relationship Expert\n          </p>\n        </div>\n        <div>\n          <h3>Dance</h3>\n          <p>\n            <a href='https://www.instagram.com/ryan.heffington/'>\n              Ryan Heffington\n            </a>{\" \"}\n            <br />\n            Live instagram dance party/workout 5 days a week (during quarantine)\n          </p>\n        </div>\n      </Typography>\n    </div>\n  );\n};\n\nexport default resources;\n","// Link to youtube channel.\n// Link to Calendly\n// Instagram Feed\n// Subscription to newsletter\n// Email/Contact Form\n\n//Eventually maybe I can add firebase -  users can create an account and there are options to create lists // add to community lists\nimport React, { useState } from \"react\";\nimport { spacing } from \"@material-ui/system\";\n\nimport {\n  Typography,\n  Button,\n  TextField,\n  FormControl,\n  Container,\n  Grid,\n} from \"@material-ui/core\";\n\nconst Contact = () => {\n  const [showEmailSignup, setEmailSignup] = useState(false);\n  const [email, setEmail] = useState();\n  const [name, setName] = useState();\n\n  const submitEmail = () => {\n    //Need a way to get the email TextField value\n\n    console.log(\"hi\");\n    window.open(\n      `mailto:monica.dixon8@gmail.com?subject=I want cyber yoga&body=My name is ${name} and my email is ${email}. Please keep me up to date on your yoga classes.`\n    );\n    setEmailSignup(false);\n  };\n\n  return (\n    <div className='content-text'>\n      <Container spacing={2}>\n        <Typography>\n          <h2>Contact</h2>\n          <Grid item xs={12}>\n            <p>\n              Here are a number number of ways you can connect with me or follow\n              my classes.\n            </p>\n            <p>\n              Every Sunday at 4pm Central. Open level, adapatible for all\n              experiencel levels. Enter your email to receive more information\n            </p>\n          </Grid>\n          <Grid container direction='column' spacing={2}>\n            <Grid item xs={12}>\n              <Button\n                variant='outlined'\n                onClick={() => {\n                  showEmailSignup === true\n                    ? setEmailSignup(false)\n                    : setEmailSignup(true);\n                }}\n              >\n                <h4>Join my weekly Zoom Yoga Class</h4>\n              </Button>\n\n              {showEmailSignup ? (\n                <div>\n                  <p>You'll be so happy.</p>\n                  <FormControl>\n                    <Grid item mt={2}>\n                      <TextField\n                        fullWidth\n                        helperText='Your name'\n                        variant='outlined'\n                        fullWidth\n                        onChange={(e) => {\n                          setName(e.target.value);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item mt={2}>\n                      <TextField\n                        fullWidth\n                        helperText='Your email address'\n                        variant='outlined'\n                        fullWidth\n                        onChange={(e) => {\n                          setEmail(e.target.value);\n                        }}\n                      />\n                    </Grid>\n                    <Grid item mt={2}>\n                      <Button\n                        variant='outlined'\n                        onClick={() => {\n                          submitEmail();\n                        }}\n                      >\n                        Let me know\n                      </Button>\n                    </Grid>\n                  </FormControl>\n                </div>\n              ) : (\n                <> </>\n              )}\n            </Grid>\n          </Grid>\n          <div>\n            <h4>\n              <a href='https://www.instagram.com/monicajdixon/'>\n                Instagram ( @monicajdixon )\n              </a>\n            </h4>\n            <p>Its about yoga, but just barely.</p>\n            <h4>\n              <a href='https://www.youtube.com/channel/UCVgIYq5liRSB46JDoFiwF2Q/'>\n                YouTube\n              </a>\n            </h4>\n            <p>\n              I'll continue to upload a number of 60 minute practices you can\n              follow allong with at a range of intensity levels.\n            </p>\n          </div>\n\n          <h4>\n            Email me.{\" \"}\n            <a href='mailto: monica.dixo8@gmail.com'>Monica.dixon8@gmail.com</a>\n          </h4>\n        </Typography>\n      </Container>\n    </div>\n  );\n};\n\nexport default Contact;\n","// This will be a page that will have information about what I am doing and how to make donations.\n//Venmo\n//Paypal\nimport React from \"react\";\n\nconst support = () => {\n  return (\n    <div className='content-text'>\n      <h3>Support</h3>\n      <br />\n      <p>\n        If you're able to support what I'm working on and what I'm offering, I\n        deeply appreciate it. I offer as much as I can to people regardless of\n        their finanical circumstances. Anything that you're able to offer, not\n        only helps me to continue, but it also allows me support people who need\n        these resources, but are not able to pay for them.\n      </p>\n      <p>\n        If you would like to make a donation, you can send make it through\n        Venmo: @Monicadixon8 or Paypal: monicajdixonyoga@gmail.com\n      </p>\n    </div>\n  );\n};\n\nexport default support;\n","import React from \"react\";\n\nconst home = () => {\n  return (\n    <div className='content-text'>\n      <h3>Hi, thanks for being here.</h3>\n      <br />\n      <p>\n        This is a collection of resources, ways to connect with me and support\n        my work that I have put together to make it a little easier for people\n        to practice yoga.\n      </p>\n      <br />\n\n      <br />\n\n      <h3>About Me</h3>\n      <p>\n        I am a 200hr RYT, trained through the Kripalu School of Yoga and\n        Ayurveda. I also hold a 85hr Registered Prenatal Yoga Certification from\n        Urban Breath Yoga. I started practicing yoga as a teenager. I was\n        fortunate to have been introduced to yoga by someone who taught to use\n        it as a form of introspective movement. The focus was on having a\n        conversation with your body rather than mastering methods of\n        manipulation. I was desperately in need of a break from manipulating my\n        body, as I believe most people are. There are many valid ways to\n        approach yoga, but I try to offer the things that yoga are to me that\n        goes beyond a sleek workout. Cultivating skills to find balance and\n        respite in our lives is central to what I practice and what I aim to\n        bring to others. Above all, I hope to offer people who join my classes\n        tools for enjoying movement and feeling empowered to trust what comes\n        from within.\n      </p>\n      <p>\n        When not under lock-down, I teach yoga classes to large and small groups\n        of people in Kansas City as well as working with people one-on-one. I\n        still do that, but currently, its through Zoom. I have experience\n        working individually with people of all experience and ability levels\n        ranging from clients with chronological illnesses and physical\n        disabilities to professional athletes and dancers. In addtion to my\n        formal trainings, in 2014 I lived and worked at the Kripalu School of\n        Yoga and Ayurveda in Stockbridge, Massachusetts which exposed me to a\n        depth and diversity of movement and wellness practices including yoga,\n        qigong, and free form dance. I'm also a regular meditator, deeply\n        influenced by the practices learned at my first Vipassana meditation in\n        Dehradun, India.\n      </p>\n    </div>\n  );\n};\n\nexport default home;\n","import React from \"react\";\nimport gif from \"../../imgs/1.gif\";\nimport \"./styles.css\";\n\nconst GifOne = () => {\n  return (\n    <div className='g1'>\n      <img src={gif} alt='Colorful Gif' />\n    </div>\n  );\n};\n\nexport default GifOne;\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core/\";\nimport Nav from \"./components/Nav\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport resources from \"./pages/resources\";\nimport contact from \"./pages/contact\";\nimport support from \"./pages/support\";\nimport home from \"./pages/home\";\nimport GifOne from \"./components/GifOne\";\nimport \"./App.css\";\n\n//import theme provider\n\n//This is the landing page of the application.\n//I will need to bring in React Router.\n//Home page will have an intro, and some nice imagery.\n\nfunction app() {\n  return (\n    <React.Fragment>\n      <GifOne />\n\n      <Router>\n        <Nav />\n        <Container>\n          <Route path='/yoga/' component={home}></Route>\n          <Route exact path='/yoga/resources' component={resources}></Route>\n          <Route exact path='/yoga/contact' component={contact}></Route>\n          <Route exact path='/yoga/support' component={support}></Route>\n        </Container>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default app;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}